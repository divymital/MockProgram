@model SPC.DTO.SalesModel

@{
    ViewBag.Title = "Sales";
}

@*<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>*@


@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @*@Html.HiddenFor(model => model.User.Id)*@
       
        <div class="row">
            <div class="col-xs-2">
                @Html.LabelFor(model => model.SalesmanName, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.SalesmanName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesmanName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <hr />
        </div>
        <div class="row">
            <div class="col-xs-2">
                @Html.LabelFor(model => model.SalesDate, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.SalesDate, new { htmlAttributes = new { @class = "form-control lessThanCurrentDate", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.SalesDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <hr />
        </div>
        <div class="row">
            <div class="col-xs-2">
                @Html.LabelFor(model => model.SalesValue, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.SalesValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesValue, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <hr />
        </div>
        <div class="row">
            <div class="col-xs-2">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <hr />
        </div>

        @if (ViewBag.Error != null)
        {
            @ViewBag.Error;
            <div class="row">
                <hr />
            </div>
        }

        @if (ViewBag.Success != null)
        {
            
            @ViewBag.Success;
            <div class="row">
                <hr />
            </div>
        }

        <div class="form-actions text-left">
            <input type="submit" value="Add Sales" class="btn btn-primary" id="btnAddSales" />
        </div>
                    
    </div>
}